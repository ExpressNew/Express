<<<<<<< HEAD
/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
var ModuleDependency = require("./ModuleDependency");

function RequireIncludeDependency(request, range) {
	ModuleDependency.call(this, request);
	this.range = range;
}
module.exports = RequireIncludeDependency;

RequireIncludeDependency.prototype = Object.create(ModuleDependency.prototype);
RequireIncludeDependency.prototype.constructor = RequireIncludeDependency;
RequireIncludeDependency.prototype.type = "require.include";

RequireIncludeDependency.Template = function RequireIncludeDependencyTemplate() {};

RequireIncludeDependency.Template.prototype.apply = function(dep, source, outputOptions, requestShortener) {
	var comment = "";
	if(outputOptions.pathinfo && dep.module)
		comment = "/*! require.include " + requestShortener.shorten(dep.request) + " */";
	source.replace(dep.range[0], dep.range[1] - 1,
		"undefined" + comment);
};
=======
/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";

const DependencyReference = require("./DependencyReference");
const ModuleDependency = require("./ModuleDependency");
const Template = require("../Template");

class RequireIncludeDependency extends ModuleDependency {
	constructor(request, range) {
		super(request);
		this.range = range;
	}

	getReference() {
		if (!this.module) return null;
		// This doesn't use any export
		return new DependencyReference(this.module, [], false);
	}

	get type() {
		return "require.include";
	}
}

RequireIncludeDependency.Template = class RequireIncludeDependencyTemplate {
	apply(dep, source, runtime) {
		const comment = runtime.outputOptions.pathinfo
			? Template.toComment(
					`require.include ${runtime.requestShortener.shorten(dep.request)}`
			  )
			: "";
		source.replace(dep.range[0], dep.range[1] - 1, `undefined${comment}`);
	}
};

module.exports = RequireIncludeDependency;
>>>>>>> fe1d9cb169be8371e17b0f68d641d6b37e00413b
